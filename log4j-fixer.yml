---
# Mitigate log4j vuln by removing class from jar.
#
- name: Log4j JndiLookup.class mitigation
  hosts: all
  ignore_unreachable: yes
  gather_facts: no
  become: true
  become_user: root

  tasks:

    - name: find *.jar
      ansible.builtin.shell:
        cmd: find / -fstype nfs -prune -o -fstype proc -prune -o -fstype cifs -prune -o -type f ! -name '*2.16*.jar' ! -name '*2.17*.jar' -name '*.jar' -exec sh -c 'zipinfo -1 {} | grep JndiLookup.class >/dev/null  && echo {}' \;
        #cmd: locate *.jar | xargs -I{} sh -c 'zipinfo -1 {} 2> /dev/null | grep -q JndiLookup.class && echo {}'
      register: find_result
      changed_when: False
      failed_when: find_result.rc !=1 and find_result.rc !=0

    - name: found files
      debug:
        msg: files {{ find_result.stdout }}

    - name: make a backup of found file
      ansible.builtin.shell:
        cmd: zip --password {{ PASSPHRASE }} "{{ jar_file }}_bak.zip" {{ jar_file }}
      loop: "{{ find_result.stdout_lines }}"
      loop_control:
        loop_var: jar_file
      register: zipping_result

    - name: grab current file owner
      ansible.builtin.stat:
        path: "{{ file_name_with_path }}"
      loop: "{{ find_result.stdout_lines }}"
      loop_control:
        loop_var: file_name_with_path
      register: file_owner_result

    - name: Output file iter result
      debug:
        msg: owners {{ file_owner_result }}

    - name: Check JndiLookup.class in found files
      ansible.builtin.shell:
        cmd: zipinfo -1 {{ class_item }} | grep JndiLookup.class
      loop: "{{ find_result.stdout_lines }}"
      loop_control:
        loop_var: class_item
      register: class_result
      changed_when: False

    - name: List all JndiLookup classes
      debug:
        msg: VULN Found "{{ item.stdout }}"
      loop: "{{ class_result.results }}"
      when: class_result is search("/JndiLookup.class")

    - name: Remove JndiLookup.class from vulnerable jar
      ansible.builtin.shell:
        cmd: zip -q -d  {{ class_item }} org/apache/logging/log4j/core/lookup/JndiLookup.class
      loop: "{{ find_result.stdout_lines }}"
      loop_control:
        loop_var: class_item
      when:
        - class_result is search("/JndiLookup.class")
        - remove_class is defined and remove_class|bool == True
      ignore_errors: yes

    - name: Set permissions correctly
      file:
        path: "{{ item.stat.path }}"
        owner: "{{ item.stat.pw_name }}"
        group: "{{ item.stat.gr_name }}"
      with_items: "{{ file_owner_result.results }}"

    - name: append to one file
      lineinfile:
        dest: ~/log4j_fixes.csv
        line: "{{ inventory_name }},{{ item.stat.path }}"
        insertafter: EOF
        create: yes
      with_items: "{{ file_owner_result.results }}"
      delegate_to: localhost

    # reboot
    - name: Reboot system
      reboot:
        reboot_timeout: 600

...
